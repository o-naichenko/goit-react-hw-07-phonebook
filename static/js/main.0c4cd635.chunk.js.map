{"version":3,"sources":["components/Contact/Contact.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","server-API/server-API.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","data","axios","get","then","res","postContact","contact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","serverAPI","contacts","addContact","newContact","postedContact","getFilter","state","filter","getContacts","getFilteredContacts","createSelector","length","name","toLowerCase","includes","changeFilter","createAction","createReducer","fulfilled","action","payload","id","toString","contactsActions","isLoading","pending","rejected","error","contactsReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ContactForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","onChangeHandler","e","currentTarget","value","className","s","Form","onSubmit","preventDefault","alert","checkInputsFill","find","checkContactUnique","contactsOperations","label","input","type","placeholder","onChange","button","Filter","target","Contact","item","text","deleteBtn","onClick","ContactList","list","map","App","useEffect","header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,UAAY,6B,mBCAxFD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,OAAS,sB,mBCA9HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,4B,ksBCGlB,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DACCC,EAAOC,IAAMC,IAAI,aAAaC,MAAK,SAAAC,GAAG,OAAIA,EAAIJ,QAD/C,kBAEEA,GAFF,4C,sBAKA,SAAeK,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAP,EAAA,sEACcE,IAAMM,KAAK,YAAaD,GAASH,MAAK,SAAAC,GAAG,OAAIA,EAAIJ,QAD/D,cACCA,EADD,yBAEEA,GAFF,4C,sBAKA,SAAeQ,EAAtB,kC,4CAAO,WAA6BC,GAA7B,SAAAV,EAAA,sEACCE,IAAMS,OAAN,oBAA0BD,IAD3B,4C,sBAZPR,IAAMU,SAASC,QAAU,wBCalB,I,MAAMd,EAAgBe,YAC3B,yBAD2C,uCAE3C,WAAOC,EAAP,oBAAAf,EAAA,6DAAYgB,EAAZ,EAAYA,gBAAZ,kBAE2BC,EAAUlB,gBAFrC,cAEUmB,EAFV,yBAGWA,GAHX,yDAOWF,EAAgB,EAAD,KAP1B,yDAF2C,yDAchCG,EAAaL,YACxB,sBADwC,uCAExC,WAAOM,EAAP,oBAAApB,EAAA,6DAAqBgB,EAArB,EAAqBA,gBAArB,kBAEgCC,EAAUX,YAAYc,GAFtD,cAEUC,EAFV,yBAGWA,GAHX,yDAKWL,EAAgB,EAAD,KAL1B,yDAFwC,yDAY7BP,EAAgBK,YAC3B,yBAD2C,uCAE3C,WAAOJ,EAAP,kBAAAV,EAAA,6DAAoBgB,EAApB,EAAoBA,gBAApB,kBAEUC,EAAUR,cAAcC,GAFlC,gCAGWA,GAHX,yDAKWM,EAAgB,EAAD,KAL1B,yDAF2C,yD,QCvChCM,EAAY,SAAAC,GAAK,OAAIA,EAAMC,QAC3BC,EAAc,SAAAF,GAAK,OAAIA,EAAML,UAE7BQ,EAAsBC,YACjC,CAACF,EAAaH,IACd,SAACJ,EAAUM,GACT,OAAsB,IAAlBA,EAAOI,OACFV,EAEAA,EAASM,QAAO,SAAAjB,GAAO,OAC5BA,EAAQsB,KAAKC,cAAcC,SAASP,EAAOM,qBCVtCE,EAAeC,YAAa,mBCMnCf,EAAWgB,YAAc,IAAD,mBAC3Bf,EAAWgB,WAAY,SAACZ,EAAOa,GAAR,4BAAuBb,GAAvB,CAA8Ba,EAAOC,aADjC,cAE3B5B,EAAc0B,WAAY,SAACZ,EAAD,OAAUc,EAAV,EAAUA,QAAV,OACzBd,EAAMC,QAAO,qBAAGc,GAAYC,aAAeF,QAHjB,cAI3BtC,EAAcoC,WAAY,SAACpB,EAAGqB,GAAJ,OAAeA,EAAOC,WAJrB,IAOxBb,EAASU,YAAc,GAAD,eACzBM,EAAgBR,cAAe,SAACjB,EAAD,YAAMsB,YAGlCI,EAAYP,aAAc,GAAD,mBAC5BnC,EAAc2C,SAAU,kBAAM,KADF,cAE5B3C,EAAcoC,WAAY,kBAAM,KAFJ,cAG5BpC,EAAc4C,UAAW,kBAAM,KAHH,IAMzBC,EAAQV,YAAc,MAAD,mBACxBnC,EAAc4C,UAAW,SAAC5B,EAAD,YAAMsB,WADP,cAExBtC,EAAc2C,SAAU,kBAAM,QAFN,IAYZG,EAPSC,YAAgB,CACtC5B,SAAUA,EACVM,SACAiB,YACAG,UCbWG,EAAQC,YAAe,CAClCC,QAASJ,EACTK,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,U,gCCnBjD,SAASC,IAAe,IAAD,EACZC,mBAAS,IADG,mBAC7BhC,EAD6B,KACvBiC,EADuB,OAERD,mBAAS,IAFD,mBAE7BE,EAF6B,KAErBC,EAFqB,KAI9B9C,EAAW+C,YAAYC,EAAkBzC,aACzC0C,EAAWC,cAgCjB,IAAMC,EAAkB,SAAAC,GAAM,IAAD,EACHA,EAAEC,cAAlB1C,EADmB,EACnBA,KAAM2C,EADa,EACbA,MACd,OAAQ3C,GACN,IAAK,OACHiC,EAAQU,GACR,MACF,IAAK,SACHR,EAAUQ,GACV,MACF,QACE,SAkBN,OACE,uBAAMC,UAAWC,IAAEC,KAAMC,SAfH,SAAAN,GACtBA,EAAEO,iBADyB,MAEFP,EAAEC,cAAnB1C,EAFmB,EAEnBA,KAAMkC,EAFa,EAEbA,OACR3C,EAAa,CACjBS,KAAMA,EAAK2C,MACXT,OAAQA,EAAOS,QAEqB,IAjCxC,SAAyB3C,EAAMkC,GAC7B,OAA0B,IAAtBlC,EAAK2C,MAAM5C,QACbkD,MAAM,sBACC,GAC0B,IAAxBf,EAAOS,MAAM5C,SACtBkD,MAAM,8BACC,GA2BLC,CAAgBlD,EAAMkC,KAEoB,IAhDhD,SAA4B3C,GAC1B,OAAIF,EAAS8D,MAAK,SAAAzE,GAAO,OAAIA,EAAQsB,OAAST,EAAWS,SACvDiC,EAAQ,IACRgB,MAAM,sBAAD,OAAuB1D,EAAWS,KAAlC,qBACE,IACEX,EAAS8D,MAAK,SAAAzE,GAAO,OAAIA,EAAQwD,SAAW3C,EAAW2C,YAChEC,EAAU,IACVc,MAAM,wBAAD,OAAyB1D,EAAW2C,OAApC,qBACE,GAwCEkB,CAAmB7D,KAC5B+C,EAASe,EAAmB/D,WAAWC,IArDzC0C,EAAQ,IACRE,EAAU,MAyDV,UACE,wBAAOS,UAAWC,IAAES,MAApB,UACE,yCACA,uBACEV,UAAWC,IAAEU,MACbC,KAAK,OACLC,YAAY,OACZzD,KAAK,OACL2C,MAAO3C,EACP0D,SAAUlB,OAGd,wBAAOI,UAAWC,IAAES,MAApB,UACE,2CACA,uBACEV,UAAWC,IAAEU,MACbC,KAAK,MACLC,YAAY,eACZzD,KAAK,SACL2C,MAAOT,EACPwB,SAAUlB,OAGd,wBAAQI,UAAWC,IAAEc,OAAQH,KAAK,SAAlC,4B,qBCtESI,EAnBA,WACb,IAAMtB,EAAWC,cACXI,EAAQP,YAAYC,EAAkB5C,WAE5C,OACE,wBAAOmD,UAAWC,IAAES,MAApB,UACE,yDACA,uBACEV,UAAWC,IAAEU,MACbC,KAAK,OACLxD,KAAK,SACL2C,MAAOA,EACPc,YAAY,iBACZC,SAAU,SAAAjB,GAAC,OAAIH,EAAS3B,EAAgBR,aAAasC,EAAEoB,OAAOlB,e,kBCYvDmB,GAzBC,SAAC,GAAiB,IAAfpF,EAAc,EAAdA,QACX4D,EAAWC,cACjB,OACE,qBAAIK,UAAWC,KAAEkB,KAAjB,UACE,mBAAGnB,UAAWC,KAAEmB,KAAhB,SAAuBtF,EAAQsB,KAAO,KAAOtB,EAAQwD,SACrD,wBACEU,UAAWC,KAAEoB,UACbT,KAAK,SACL/C,GAAI/B,EAAQ+B,GACZyD,QAAS,SAAAzB,GAAC,OAAIH,EAASe,EAAmBzE,cAAc6D,EAAEoB,OAAOpD,MAJnE,wB,oBCMS0D,GAXK,WAClB,IAAM9E,EAAW+C,YAAYC,EAAkBxC,qBAC/C,OACE,oBAAI+C,UAAWC,KAAEuB,KAAjB,SACG/E,EAASgF,KAAI,SAAA3F,GAAO,OACnB,cAAC,GAAD,CAA0BA,QAASA,GAArBA,EAAQ+B,U,oBCcf6D,OAjBf,WACE,IAAMjF,EAAW+C,YAAYC,EAAkBzC,aACzC0C,EAAWC,cAIjB,OAFAgC,qBAAU,kBAAMjC,EAASe,EAAmBnF,mBAAkB,CAACoE,IAG7D,sBAAKM,UAAWC,KAAEyB,IAAlB,UACE,oBAAI1B,UAAWC,KAAE2B,OAAjB,uBACA,cAACzC,EAAD,IACA,oBAAIa,UAAWC,KAAE2B,OAAjB,sBACA,cAAC,EAAD,IACCnF,EAASU,OAAS,GAAK,cAAC,GAAD,QCZ9B0E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzD,MAAOA,EAAjB,SAEE,cAAC,GAAD,QAIJ0D,SAASC,eAAe,U,kBCf1B7G,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.0c4cd635.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1d_kg\",\"text\":\"Contact_text__1-w6I\",\"deleteBtn\":\"Contact_deleteBtn__2fAPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"header\":\"App_header__3ZZ1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchContacts() {\n  const data = axios.get('/contacts').then(res => res.data);\n  return data;\n}\n\nexport async function postContact(contact) {\n  const data = await axios.post('/contacts', contact).then(res => res.data);\n  return data;\n}\n\nexport async function deleteContact(contactId) {\n  await axios.delete(`/contacts/${contactId}`);\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { serverAPI } from 'server-API';\n\n// import contactsActions from './contacts-actions';\n\n// export const fetchContacts = () => async dispatch => {\n//   dispatch(contactsActions.fetchContactsRequest());\n//   try {\n//     const contacts = await serverApi.fetchContacts();\n//     dispatch(contactsActions.fetchContactsSuccess(contacts));\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error));\n//   }\n// };\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await serverAPI.fetchContacts();\n      return contacts;\n    } catch (error) {\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\n      // by explicitly returning it using the `rejectWithValue()` utility\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (newContact, { rejectWithValue }) => {\n    try {\n      const postedContact = await serverAPI.postContact(newContact);\n      return postedContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await serverAPI.deleteContact(contactId);\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (filter.length === 0) {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      );\n    }\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/filter');\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport { contactsActions } from 'redux/contacts';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst contacts = createReducer([], {\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id.toString() !== payload),\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n});\n\nconst contactsReducer = combineReducers({\n  contacts: contacts,\n  filter,\n  isLoading,\n  error,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: contactsReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\n// export const persistor = persistStore(store);\n","import React, { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const clearState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function checkContactUnique(newContact) {\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      setName('');\n      alert(`Contact with name: ${newContact.name} already exists`);\n      return false;\n    } else if (contacts.find(contact => contact.number === newContact.number)) {\n      setNumber('');\n      alert(`Contact with number: ${newContact.number} already exists`);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  function checkInputsFill(name, number) {\n    if (name.value.length === 0) {\n      alert('Please, fill name');\n      return false;\n    } else if (number.value.length === 0) {\n      alert('Please, fill phone number');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const onChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const { name, number } = e.currentTarget;\n    const newContact = {\n      name: name.value,\n      number: number.value,\n    };\n    if (checkInputsFill(name, number) === false) {\n      return;\n    } else if (checkContactUnique(newContact) === true) {\n      dispatch(contactsOperations.addContact(newContact));\n      clearState();\n    }\n  };\n  return (\n    <form className={s.Form} onSubmit={onSubmitHandler}>\n      <label className={s.label}>\n        <span>Name:</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={name}\n          onChange={onChangeHandler}\n        ></input>\n      </label>\n      <label className={s.label}>\n        <span>Number:</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          placeholder=\"Phone number\"\n          name=\"number\"\n          value={number}\n          onChange={onChangeHandler}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\n// import contactsActions from 'redux/contacts';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelectors.getFilter);\n\n  return (\n    <label className={s.label}>\n      <span>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        placeholder=\"Type name here\"\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport s from './Contact.module.css';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={s.item}>\n      <p className={s.text}>{contact.name + ': ' + contact.number}</p>\n      <button\n        className={s.deleteBtn}\n        type=\"button\"\n        id={contact.id}\n        onClick={e => dispatch(contactsOperations.deleteContact(e.target.id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Contact from 'components/Contact';\nimport { contactsSelectors } from 'redux/contacts';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport s from 'App.module.css';\n\nfunction App() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={s.App}>\n      <h1 className={s.header}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.header}>Contacts</h2>\n      <Filter />\n      {contacts.length > 0 && <ContactList />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from 'redux/store';\nimport 'index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__Vd_-O\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}